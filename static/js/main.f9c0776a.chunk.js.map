{"version":3,"sources":["components/Navbar.js","components/pages/ContactsUs.js","components/pages/Home.js","components/pages/DashBoard.js","components/Footer1.js","App.js","index.js"],"names":["Navbar","useState","click","setClick","closeMobMenu","className","to","onClick","ContactUs","Plot","createPlotlyComponent","Plotly","Home","props","state","stockChartXValues","stockChartYValues","this","fetchStock","pointerToThis","console","log","API_Call","stockChartXValuesFunction","stockChartYValuesFunction","fetch","then","response","json","data","key","push","setState","x","y","type","mode","marker","color","layout","width","height","title","React","Component","DashBoard","shareSelected","e","a","preventDefault","target","value","selectedTicker","addTicker","ticker","document","getElementById","search","open","close","newDate","Date","valueOf","date","getDate","month","getMonth","year","getFullYear","tablekey","StockSymbol","stockChartXValuesHT","stockChartYValuesHT","gsharesTable","sharesTable","gsharesList","sharesList","gain","selected","showTable","currentStock","showChart","IsArray","Object","keys","map","index","toUpperCase","shareInfo","id","placeholder","bind","onChange","sharesTableHeader","sharesTableData","Footer1","aria-label","App","path","exact","component","ReactDOM","render"],"mappings":"wPAoDeA,MA/Cf,WAAmB,IAAD,EACYC,oBAAS,GADrB,mBACPC,EADO,KACAC,EADA,KAGRC,EAAe,kBAAMD,GAAS,IAEpC,OACI,mCACI,sBAAKE,UAAU,SAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAvB,oBAGA,qBAAKA,UAAU,aAAaE,QATpB,kBAAMJ,GAAUD,IASxB,SACI,mBAAGG,UAAWH,EAAO,eAAe,kBAExC,qBAAIG,UAAWH,EAAQ,iBAAmB,UAA1C,UACI,oBAAIG,UAAU,UAAd,SACI,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,WAAWE,QAASH,EAA3C,oBAKJ,oBAAIC,UAAU,UAAd,SACI,cAAC,IAAD,CAAMC,GAAG,cAAcD,UAAU,WAAWE,QAASH,EAArD,wBAKJ,oBAAIC,UAAU,UAAd,SACI,cAAC,IAAD,CAAMC,GAAG,aAAaD,UAAU,WAAWE,QAASH,EAApD,yBAKJ,oBAAIC,UAAU,UAAd,SACI,cAAC,IAAD,CAAMC,GAAG,cAAcD,UAAU,WAAWE,QAASH,EAArD,mC,QCtCT,SAASI,IACpB,OACI,mCACI,oBAAIH,UAAU,WAAd,yB,4ECDNI,EAAOC,IAAsBC,KAwEpBC,E,kDApEX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,kBAAmB,GACnBC,kBAAmB,IAJR,E,gEAQfC,KAAKC,e,mCAKL,IAAMC,EAAgBF,KACtBG,QAAQC,IAAIF,GACZ,IAEIG,EAAQ,uFADM,MACN,sCAFI,oBAGZC,EAA4B,GAC5BC,EAA4B,GAChCC,MAAMH,GACLI,MACO,SAAUC,GACN,OAAOA,EAASC,UAG3BF,MACG,SAAUG,GAEN,IAAK,IAAIC,KADTV,QAAQC,IAAIQ,GACIA,EAAK,uBACjBN,EAA0BQ,KAAKD,GAC/BN,EAA0BO,KAAKF,EAAK,uBACnCC,GAAK,YAGVX,EAAca,SAAS,CACnBjB,kBAAmBQ,EACnBP,kBAAmBQ,S,+BAM/B,OACI,8BACI,cAACf,EAAD,CACIoB,KAAM,CACF,CACII,EAAGhB,KAAKH,MAAMC,kBACdmB,EAAGjB,KAAKH,MAAME,kBACdmB,KAAM,UACNC,KAAM,gBACNC,OAAQ,CAAEC,MAAO,SAIzBC,OAAQ,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,MAAO,Y,GA1D3CC,IAAMC,W,oCCDnBnC,G,QAAOC,IAAsBC,MAoLpBkC,E,kDAhLX,WAAYhC,GAAQ,IAAD,8BACf,cAAMA,IAkBViC,cAnBmB,uCAmBH,WAAOC,GAAP,SAAAC,EAAA,yDACZD,EAAEE,iBAEqB,KAAnBF,EAAEG,OAAOC,MAHD,gCAIF,EAAKnB,SAAS,CAChBoB,eAAgBL,EAAEG,OAAOC,QALrB,2CAnBG,wDA6BnBE,UA7BmB,uCA6BP,WAAMN,GAAN,eAAAC,EAAA,yDACRD,EAAEE,iBAEiB,MADbK,EAASC,SAASC,eAAe,aAC5BL,MAHH,gCAIE,EAAKnB,SAAS,CAChByB,OAAQH,EAAOH,MACfC,eAAgBE,EAAOH,QANvB,OASJ,EAAKjC,aATD,2CA7BO,wDA6CnBA,WAAa,WAET,IAeIwC,EAAKC,EAfLC,EAAU,IAAIC,MAAM,IAAIA,MAAQC,UAAY,OAC5CC,EAAQH,EAAQI,UAChBC,EAAQL,EAAQM,WAAa,EAC7BC,EAAOP,EAAQQ,cACfC,EAAQ,UAAMF,EAAN,YAAcF,EAAM,GAAN,WAAaA,GAAb,UAAwBA,GAAtC,YAAiDF,GACzDO,EAAc,EAAKxD,MAAM2C,OACvBtC,EAAa,eAEfG,EAAQ,uFAAmFgD,EAAnF,sCADI,oBAEZ/C,EAA4B,GAC5BC,EAA4B,GAC5B+C,EAAsB,EAAKzD,MAAMC,kBACjCyD,EAAsB,EAAK1D,MAAME,kBACjCyD,EAAe,EAAK3D,MAAM4D,YAC1BC,EAAc,EAAK7D,MAAM8D,WAE7BnD,MAAMH,GACDI,MACG,SAAUC,GACN,OAAOA,EAASC,UAGvBF,MACG,SAAUG,GAGN,IAAK,IAAIC,KAFTV,QAAQC,IAAIQ,GAEIA,EAAK,uBACjBN,EAA0BQ,KAAKD,GAC/BN,EAA0BO,KAAKF,EAAK,uBAAuBC,GAAK,YAC7DA,IAAMuC,IAELX,EAAK7B,EAAK,uBAAuBC,GAAK,WACtC6B,EAAQ9B,EAAK,uBAAuBC,GAAK,YACzC2C,EAAa1C,KAAK,CAAEuB,OAAO,GAAD,OAAKgB,GAAeZ,KAAK,GAAD,OAAKA,GAAQC,MAAM,GAAD,OAAKA,GAASkB,KAAM,UAAGlB,GAAH,UAAgBD,KACxGiB,EAAY5C,KAAK,wBAAQ+C,UAAQ,EAAmB3B,MAAOmB,EAA1C,SAAwDA,GAAlCA,KAG/CC,EAAoB,GAAD,OAAID,IAAiB/C,EACxCiD,EAAoB,GAAD,OAAIF,IAAiB9C,EAExCL,EAAca,SAAS,CACnBjB,kBAAmBwD,EACnBvD,kBAAmBwD,EACnBE,YAAaD,EACbM,WAAW,EACXH,WAAYD,QA1F5B,EAAK7D,MAAQ,CACT4D,YAAa,GACb3D,kBAAmB,GACnBC,kBAAmB,GACnBgE,aAAc,GACdD,WAAW,EACXE,WAAW,EACXC,QAAS,GACT9B,eAAe,GACfK,OAAQ,GACRmB,WAAY,CAAC,wBAAmBzB,MAAM,OAAzB,8BAAY,UAZd,E,gEAmGf,GAA4B,GAAxBlC,KAAKH,MAAMiE,UAEX,OADaI,OAAOC,KAAKnE,KAAKH,MAAM4D,YAAY,IAClCW,KAAI,SAACvD,EAAKwD,GACpB,OAAO,6BAAiBxD,EAAIyD,eAAZD,Q,wCAOxB,OAAOrE,KAAKH,MAAM4D,YAAYW,KAAI,SAACG,EAAWF,GAAW,IAC7ChC,EAA8BkC,EAA9BlC,OAAQI,EAAsB8B,EAAtB9B,KAAMC,EAAgB6B,EAAhB7B,MAAOkB,EAASW,EAATX,KAC7B,OACI,+BACI,6BAAKvB,IACL,6BAAKI,IACL,6BAAKC,IACL,6BAAKkB,MAJAvB,Q,+BAUjB,OACI,gCACI,gCACI,gCAEI,uBAAOnB,KAAK,OAAOsD,GAAG,WAAWC,YAAY,wBAC7C,wBAAQnF,QAASU,KAAKoC,UAAUsC,KAAK1E,MAArC,0BACA,uDACA,wBAAQ2E,SAAU3E,KAAK6B,cAAvB,SACK7B,KAAKH,MAAM8D,mBAIpB,8BACA,cAAC,EAAD,CACA/C,KAAM,CACF,CACII,EAAGhB,KAAKH,MAAMC,kBAAkBE,KAAKH,MAAMsC,gBAC3ClB,EAAGjB,KAAKH,MAAME,kBAAkBC,KAAKH,MAAMsC,gBAC3CjB,KAAM,UACNC,KAAM,gBACNC,OAAQ,CAAEC,MAAO,SAIrBC,OAAQ,CACJC,MAAO,IAAKC,OAAQ,IAAKC,MAAOzB,KAAKH,MAAMsC,uBAKvD,8BACI,gCACI,oBAAIqC,GAAG,YAAP,sCACA,uBAAOA,GAAG,SAAV,SACI,kCACI,6BAAKxE,KAAK4E,sBACT5E,KAAK6E,mC,GAjKdnD,IAAMC,W,QC0DfmD,MA5Df,WACI,OACI,qBAAK1F,UAAU,mBAAf,SACI,yBAASA,UAAU,eAAnB,SACI,sBAAKA,UAAU,oBAAf,UACI,8BACI,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,oBAAvB,2BAKJ,uBAAOA,UAAU,cAAjB,gCACA,sBAAKA,UAAU,qBAAf,UACI,cAAC,IAAD,CACIA,UAAU,kCACVC,GAAG,IACH4C,OAAO,SACP8C,aAAW,WAJf,SAMI,mBAAG3F,UAAU,wBAEjB,cAAC,IAAD,CACIA,UAAU,mCACVC,GAAG,IACH4C,OAAO,SACP8C,aAAW,YAJf,SAMI,mBAAG3F,UAAU,uBAEjB,cAAC,IAAD,CACIA,UAAU,iCACVC,GAAG,IACH4C,OAAO,SACP8C,aAAW,UAJf,SAMI,mBAAG3F,UAAU,qBAEjB,cAAC,IAAD,CACIA,UAAU,iCACVC,GAAG,IACH4C,OAAO,SACP8C,aAAW,UAJf,SAMI,mBAAG3F,UAAU,qBAEjB,cAAC,IAAD,CACIA,UAAU,iCACVC,GAAG,IACH4C,OAAO,SACP8C,aAAW,WAJf,SAMI,mBAAG3F,UAAU,iCChC1B4F,MAff,WACE,OACE,eAAC,IAAD,WACM,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWxF,IACjC,cAAC,IAAD,CAAOsF,KAAK,cAAcC,OAAK,EAACC,UAAW5F,IAC3C,cAAC,IAAD,CAAO0F,KAAK,aAAaC,OAAK,EAACC,UAAWvD,OAG9C,cAAC,EAAD,QCdVwD,IAASC,OAAO,cAAC,EAAD,IAAS/C,SAASC,eAAe,U","file":"static/js/main.f9c0776a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.css';\r\n\r\n\r\nfunction Navbar() {\r\n    const [click, setClick] = useState(false);\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobMenu = () => setClick(false);\r\n\r\n    return (\r\n        <>\r\n            <nav className='navbar'>\r\n                <Link to='/' className='navbar-name'>\r\n                    SHARES\r\n                </Link>\r\n                <div className='navbar-mob' onClick={handleClick}>\r\n                    <i className={click ?'fas fa-times':'fas fa-bars' } />\r\n                </div>\r\n                <ul className={click ? 'na-menu active' : 'na-menu'}>\r\n                    <li className='na-item'>\r\n                        <Link to='/' className='na-links' onClick={closeMobMenu}>\r\n                            Home\r\n                        </Link>\r\n\r\n                    </li>\r\n                    <li className='na-item'>\r\n                        <Link to='/contact-us' className='na-links' onClick={closeMobMenu}>\r\n                            About Us\r\n                        </Link>\r\n\r\n                    </li>\r\n                    <li className='na-item'>\r\n                        <Link to='/DashBoard' className='na-links' onClick={closeMobMenu}>\r\n                            DashBoard\r\n                        </Link>\r\n\r\n                    </li>\r\n                    <li className='na-item'>\r\n                        <Link to='/contact-us' className='na-links' onClick={closeMobMenu}>\r\n                            Contact Us\r\n                        </Link>\r\n\r\n                    </li>\r\n                    \r\n                </ul>\r\n                \r\n\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\nexport default Navbar;","import React from 'react';\r\nexport default function ContactUs() {\r\n    return (\r\n        <>\r\n            <h1 className='allpages'>ContactUs</h1>\r\n        </>\r\n\r\n    );\r\n\r\n}","import React from 'react';\r\nimport Plotly from \"plotly.js\"\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nclass Home extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            stockChartXValues: [],\r\n            stockChartYValues: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.fetchStock();\r\n    }\r\n\r\n    fetchStock() {\r\n        \r\n        const pointerToThis = this;\r\n        console.log(pointerToThis);\r\n        const API_KEY = '15B5S5ZNVIMAV22S';\r\n        let StockSymbol = 'IBM'\r\n        let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=compact&apikey=${API_KEY}`;\r\n        let stockChartXValuesFunction = [];\r\n        let stockChartYValuesFunction = [];\r\n        fetch(API_Call)\r\n        .then(\r\n                function (response) {\r\n                    return response.json();\r\n                }\r\n        )\r\n        .then(\r\n            function (data) {\r\n                console.log(data);\r\n                for (var key in data['Time Series (Daily)']) {\r\n                    stockChartXValuesFunction.push(key);\r\n                    stockChartYValuesFunction.push(data['Time Series (Daily)']\r\n                    [key]['1. open']);\r\n                }\r\n\r\n                pointerToThis.setState({\r\n                    stockChartXValues: stockChartXValuesFunction,\r\n                    stockChartYValues: stockChartYValuesFunction\r\n                });\r\n            }\r\n        )\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Plot\r\n                    data={[\r\n                        {\r\n                            x: this.state.stockChartXValues,\r\n                            y: this.state.stockChartYValues,\r\n                            type: 'scatter',\r\n                            mode: 'lines+markers',\r\n                            marker: { color: 'red' },\r\n                        }\r\n                       \r\n                    ]}\r\n                    layout={{ width: 720, height: 440, title: '' }}\r\n                />\r\n               \r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\nexport default Home;\r\n","import React from 'react';\r\nimport './DashBoard.css';\r\nimport Plotly from \"plotly.js\"\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nclass DashBoard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sharesTable: [],\r\n            stockChartXValues: {},\r\n            stockChartYValues: {},\r\n            currentStock: '',\r\n            showTable: false,\r\n            showChart: false,\r\n            IsArray: [],\r\n            selectedTicker:'',\r\n            search: '',\r\n            sharesList: [<option key='None' value='None'>Select the ticker</option>]\r\n        }\r\n        //this.fetchStock = this.fetchStock.bind(this);\r\n    }\r\n    /*componentDidMount() {\r\n        this.fetchStock();\r\n    }*/\r\n    shareSelected = async (e) => {\r\n        e.preventDefault();\r\n        //const ticker = document.getElementById(\"tickerId\");\r\n        if (e.target.value !== \"\") {\r\n            await this.setState({\r\n                selectedTicker: e.target.value,\r\n            });\r\n            \r\n        }\r\n    }\r\n    addTicker = async(e) => {\r\n        e.preventDefault();\r\n        const ticker = document.getElementById(\"tickerId\");\r\n        if (ticker.value!==\"\") {\r\n            await this.setState({\r\n                search: ticker.value,\r\n                selectedTicker: ticker.value,\r\n            });\r\n            \r\n            this.fetchStock();\r\n            //this.onchange();\r\n            \r\n        }\r\n        \r\n       \r\n    }\r\n    fetchStock = () => {\r\n\r\n        let newDate = new Date((new Date()).valueOf() - 1000*60*60*24);\r\n        let date =  newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        let tablekey = `${year}-${month<10?`0${month}`:`${month}`}-${date}`;\r\n        let StockSymbol = this.state.search;\r\n        const pointerToThis = this;\r\n        const API_KEY = '15B5S5ZNVIMAV22S';\r\n        let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=compact&apikey=${API_KEY}`;\r\n        let stockChartXValuesFunction = [];\r\n        let stockChartYValuesFunction = [];\r\n        let stockChartXValuesHT = this.state.stockChartXValues;\r\n        let stockChartYValuesHT = this.state.stockChartYValues;\r\n        let gsharesTable = this.state.sharesTable;\r\n        let gsharesList = this.state.sharesList;\r\n        let open,close;\r\n        fetch(API_Call)\r\n            .then(\r\n                function (response) {\r\n                    return response.json();\r\n                }\r\n            )\r\n            .then(\r\n                function (data) {\r\n                    console.log(data);\r\n                                      \r\n                    for (var key in data['Time Series (Daily)']) {\r\n                        stockChartXValuesFunction.push(key);\r\n                        stockChartYValuesFunction.push(data['Time Series (Daily)'][key]['1. open']);\r\n                        if(key===tablekey)\r\n                        {\r\n                            open=data['Time Series (Daily)'][key]['1. open']; \r\n                            close = data['Time Series (Daily)'][key]['4. close'];\r\n                            gsharesTable.push({ ticker: `${StockSymbol}`, open: `${open}`, close: `${close}`, gain: `${close}` - `${open}` });\r\n                            gsharesList.push(<option selected key={StockSymbol} value={StockSymbol}>{StockSymbol}</option>);\r\n                        }\r\n                    }\r\n                    stockChartXValuesHT[`${StockSymbol}`] = stockChartXValuesFunction;\r\n                    stockChartYValuesHT[`${StockSymbol}`] = stockChartYValuesFunction;\r\n                    \r\n                    pointerToThis.setState({\r\n                        stockChartXValues: stockChartXValuesHT,\r\n                        stockChartYValues: stockChartYValuesHT,\r\n                        sharesTable: gsharesTable,\r\n                        showTable: true,\r\n                        sharesList: gsharesList\r\n                    });\r\n                }\r\n            )\r\n    }\r\n  \r\n    sharesTableHeader() {\r\n        if (this.state.showTable == true) {\r\n            let header = Object.keys(this.state.sharesTable[0])\r\n            return header.map((key, index) => {\r\n                return <th key={index}>{key.toUpperCase()}</th>\r\n            })\r\n        }\r\n   }\r\n\r\n\r\n    sharesTableData() {\r\n        return this.state.sharesTable.map((shareInfo, index) => {\r\n            const { ticker, open, close, gain } = shareInfo //destructuring\r\n            return (\r\n                <tr key={ticker}>\r\n                    <td>{ticker}</td>\r\n                    <td>{open}</td>\r\n                    <td>{close}</td>\r\n                    <td>{gain}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div>\r\n                        \r\n                        <input type=\"text\" id=\"tickerId\" placeholder=\"Enter Ticker Symbol\"/>\r\n                        <button onClick={this.addTicker.bind(this)}> Add Ticker </button>\r\n                        <label> Select the Ticker\r\n                        <select onChange={this.shareSelected} >\r\n                            {this.state.sharesList}\r\n                        </select>\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                    <Plot\r\n                    data={[\r\n                        {\r\n                            x: this.state.stockChartXValues[this.state.selectedTicker],\r\n                            y: this.state.stockChartYValues[this.state.selectedTicker],\r\n                            type: 'scatter',\r\n                            mode: 'lines+markers',\r\n                            marker: { color: 'red' },\r\n                        }\r\n\r\n                    ]}\r\n                        layout={{\r\n                            width: 720, height: 440, title: this.state.selectedTicker}}\r\n                    />\r\n                    </div>\r\n\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <h1 id='tableName'>Shares Information Table</h1>\r\n                        <table id='shares'>\r\n                            <tbody>\r\n                                <tr>{this.sharesTableHeader()}</tr>\r\n                                {this.sharesTableData()}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n           \r\n           \r\n            \r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\nexport default DashBoard;\r\n","import React from 'react';\r\nimport './Footer.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer1() {\r\n    return (\r\n        <div className='footer-container'>\r\n            <section className='social-media'>\r\n                <div className='social-media-wrap'>\r\n                    <div>\r\n                        <Link to='/' className='social-media-logo'>\r\n                            SHARES\r\n                            Logo\r\n                        </Link>\r\n                    </div>\r\n                    <small className='copy-rights'>Shares � 2021</small>\r\n                    <div className='social-media-icons'>\r\n                        <Link\r\n                            className='social-media-icon-link facebook'\r\n                            to='/'\r\n                            target='_blank'\r\n                            aria-label='Facebook'\r\n                        >\r\n                            <i className='fab fa-facebook-f' />\r\n                        </Link>\r\n                        <Link\r\n                            className='social-media-icon-link instagram'\r\n                            to='/'\r\n                            target='_blank'\r\n                            aria-label='Instagram'\r\n                        >\r\n                            <i className='fab fa-instagram' />\r\n                        </Link>\r\n                        <Link\r\n                            className='social-media-icon-link youtube'\r\n                            to='/'\r\n                            target='_blank'\r\n                            aria-label='Youtube'\r\n                        >\r\n                            <i className='fab fa-youtube' />\r\n                        </Link>\r\n                        <Link\r\n                            className='social-media-icon-link twitter'\r\n                            to='/'\r\n                            target='_blank'\r\n                            aria-label='Twitter'\r\n                        >\r\n                            <i className='fab fa-twitter' />\r\n                        </Link>\r\n                        <Link\r\n                            className='social-media-icon-link twitter'\r\n                            to='/'\r\n                            target='_blank'\r\n                            aria-label='LinkedIn'\r\n                        >\r\n                            <i className='fab fa-linkedin' />\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer1;","import React from 'react';\r\nimport './App.css';\r\nimport Nav from './components/Navbar';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport ContactUs from './components/pages/ContactsUs';\r\nimport Home from './components/pages/Home';\r\nimport DashBoard from './components/pages/DashBoard';\r\nimport Footer from './components/Footer1';\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n          <Nav />\r\n          <Switch>\r\n              <Route path='/' exact component={Home} />\r\n              <Route path='/contact-us' exact component={ContactUs} />\r\n              <Route path='/Dashboard' exact component={DashBoard} />\r\n              \r\n          </Switch>\r\n          <Footer/>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}